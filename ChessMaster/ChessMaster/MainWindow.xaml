<Window x:Class="ChessMaster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChessMaster"
        mc:Ignorable="d"
        Title="Chess Master" Height="600" Width="800"
        MinHeight="600"
        MinWidth="800"
        MaxHeight="600"
        MaxWidth="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="CellStyle">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="LogHeaderStyle">
            <Setter Property="Background" Value="LightGreen"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}" x:Key="LogRowStyle">
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="0">
                    <Setter Property="Background" Value="Gold"/>
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Menu Grid.ColumnSpan="5">
            <MenuItem Header="File">
                <MenuItem Header="New Game">
                    <MenuItem Header="New game against AI" Command="{Binding NewGameAgainstAICommand}"/>
                    <MenuItem Header="New game against human" Command="{Binding NewGameAgainstHumanCommand}"/>
                </MenuItem>
                <MenuItem Header="Undo Move" Command="{Binding UnmakeMoveCommand}"/>
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
        </Menu>

        <Label FontSize="20" Grid.Row="1" Content="History of moves" Margin="5" HorizontalAlignment="Center"/>

        <DataGrid Grid.Row="2" Margin="10" AutoGenerateColumns="False" AlternationCount="2"
                  ItemsSource="{Binding Logs}" IsReadOnly="True" RowStyle="{StaticResource LogRowStyle}"
                  ColumnHeaderStyle ="{StaticResource LogHeaderStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="# Move" Binding="{Binding MoveNumber}" Width="*" CanUserSort="False"/>
                <DataGridTextColumn Header="White" Binding="{Binding WhiteMove}" Width="*" CanUserSort="False"/>
                <DataGridTextColumn Header="Black" Binding="{Binding BlackMove}" Width="*" CanUserSort="False"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Label Content="Black side timer" Margin="5"/>
            <TextBox IsReadOnly="True" Margin="5" Text="{Binding BlackSideTime}" BorderThickness="4" BorderBrush="{Binding BlackSideBorderColor}"/>
            <Label Content="White side timer" Margin="5, 5, 5, 5"/>
            <TextBox IsReadOnly="True" Margin="5" Text="{Binding WhiteSideTime}" BorderThickness="4" BorderBrush="{Binding WhiteSideBorderColor}"/>
            <Button Content="Undo Move" Margin="5" Command="{Binding UnmakeMoveCommand}"/>
        </StackPanel>

        <ItemsControl Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Numbers}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="8"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Label VerticalAlignment="Center" HorizontalAlignment="Right" Content="{Binding}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        
        <ItemsControl Grid.Column="2" Grid.Row="3" ItemsSource="{Binding Letters}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="8"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Label VerticalAlignment="Top" HorizontalAlignment="Center" Content="{Binding}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <ItemsControl Grid.Column="2" Grid.Row="2" ItemsSource="{Binding Cells, UpdateSourceTrigger=PropertyChanged}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="8" Columns="8"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button CommandParameter="{Binding Position}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CellCommand}" 
                         Background="{Binding Background}" BorderBrush="{Binding BorderColor}" Style="{StaticResource CellStyle}">
                        <Image Stretch="UniformToFill" Source="{Binding Piece.PieceImage}"/>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
